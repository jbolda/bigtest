name: Test Ubuntu

on:
  pull_request:
    branches:
      - 'v[0-9]+'

jobs:
  prepack:
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    name: prepack
    strategy:
      matrix:
        platform: [ubuntu-latest]
        # keeping platform as a single item so test-*.yml files can be identical except for this value
    steps:
      - uses: actions/checkout@v1
      - name: cache node_modules
        uses: actions/cache@v2
        # cache node_modules based on lockfile which can change
        # when there is no explicit change in package.json
        # and prevents cache bust when scripts or metadata is changed
        # which does not effect the node_modules themselves
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Run prepack
        run: yarn prepack
      - uses: actions/upload-artifact@v2
        with:
          name: bigtest.dist.${{ matrix.platform }}
          path: ./packages/*/dist

  test:
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    name: ${{ matrix.package }}
    needs: prepack
    # test job will wait until the prepack step finishes to begin which is needed for the dist artifact
    # if prepack runs on matrix of multiple OSes then it waits for all of them to complete
    # this delays ubuntu from fully running so we copy this workflow to separate out the chain of waiting into three
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        # keeping platform as a single item so test-*.yml files can be identical except for this value
        package: [agent, cli, effection, logging, bundler, project, server, suite, interactor, todomvc, atom, webdriver]
    steps:
      - uses: actions/checkout@v1
      - name: cache node_modules
        uses: actions/cache@v2
        # cache node_modules based on lockfile which can change
        # when there is no explicit change in package.json
        # and prevents cache bust when scripts or metadata is changed
        # which does not effect the node_modules themselves
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/download-artifact@v2
        # this action will also unpack them for us
        with:
          name: bigtest.dist.${{ matrix.platform }}
          path: ./packages
      - name: Install dependencies
        run: yarn
      - name: Run tests
        run: yarn workspace @bigtest/${{ matrix.package }} test
